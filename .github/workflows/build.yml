# This yml is adapted from pull_request_test_build.yml
name: build

on:
  push:
    tags:
      - "v*.*.*"
    branches:
      - "master"
  pull_request:
    branches:
      - "*"

  workflow_dispatch:

jobs:
  checks:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Format checks
        run: |
          yarn install
          npm run prettier:check

  build:
    runs-on: ubuntu-latest
    needs: checks
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Build
        run: |
          yarn install
          npm run build

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: zip hypercrx.zip
        run: zip release/hypercrx.zip -r build/*

      - name: Release pre-Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            release/hypercrx.crx
            release/hypercrx.zip

      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          title: ${{ github.ref_name }}
          files: |
            release/hypercrx.crx
            release/hypercrx.zip
      
  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      # Generate packages in Release
      - name: Upload and Deploy
        run: |
          yarn install --cwd ./scripts
          yarn run deploy
        env:
          EXTENSION_ID: ${{ secrets.EXTENSION_ID }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
    needs: build


